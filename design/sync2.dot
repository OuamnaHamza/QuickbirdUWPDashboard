digraph G {
    # Defaults
    graph[fontname="consolas"];
    edge[fontname="consolas"];
    node[style="filled", fillcolor="white", fontname="consolas"] ;

    subgraph cluster0 {
        label="Sync Process";
        style="filled";
        color="lightgray";

        # Terminators
        node[shape=box, style="rounded,filled", fillcolor="orange"];
        start[label="Sync($device)"];
        end[label="End"];
 
        {rank=source; start}
        {rank=sink; end}

        # Reset defaults
        node[fillcolor="white", style="filled"]
        
        # Inputs
        node[shape="polygon", sides="4", skew="0.2"]
        request[label="GET:Hist/$device/5/$lastDown"]
        histNullUploaded[label="DB:Hist.Where(uploaded=null)"]

        # Processes
        node[shape="box"]
        decode[label="Decode(results)"]
        merge[label="Merge(decoded)"]
        lastDownUpd[label="$lastDown=items.Last().Date"]
        setUpdNull[label="[item.uploaded = null]"]
        uploadData[label="Upload(results)"]
        itemOverwritten[label="merged.Where(overwritten)"]
        setUploaded[label="[result.uploaded = now]"]

        # Branches
        node[shape="diamond"]
        reqAny[label="result.Any()"]
        nullUploadAny[label="query.Any()"]

        # Relationships
        node[shape="box"]
        
        start -> request -> reqAny

        reqAny -> decode[label="true"]
        reqAny -> histNullUploaded[label="false"]

        decode -> merge -> itemOverwritten
        itemOverwritten -> setUpdNull
        setUpdNull -> lastDownUpd
        lastDownUpd -> request 

        histNullUploaded -> nullUploadAny
        nullUploadAny -> uploadData[label="true"]
        uploadData -> setUploaded

        nullUploadAny -> end[label="false"]
        setUploaded -> end
    }

    subgraph clusterlegend{ 
        label="Legend"
        style="filled";
        color="lightgray";

        Terminator[shape="box", style="rounded, filled", fillcolor="orange"];
        Process[shape="box"];
        Input[shape="polygon", sides="4", skew="0.2"];
        Branch[shape="diamond"];

        Terminator -> Process -> Input -> Branch;
    }
}